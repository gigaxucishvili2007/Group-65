"""გამოიყენეთ Comprasion Operations და Logical Operations ერთად, შეეცადეთ კომენტარებით ახსნათ რატომ გამოაქვს ესეთი შედეგი და ასევე თუ რომელი სრულდება პირველი, რა თანმიმდევრობით."""

# print(10 > 5) # True - ეს შედეგი იმიტომ მიიღება, რომ მართლაც მეტია 10 5-ზე როგორც მათემატიკაში ისე ( Python ში )
# print(15 > 3) # True - 15 მართლაც მეტია 3 ზე
# print(5 > 10) # False - 5 მეტი არ არის 10 ზე ამიტომ result True ს საპირისპირო იქნება: (False)
# print(20 > 50)# False - 20 არ არის მეტი 50-ზე ამიტომ True ლოგიკური, ოპერაცია არ შესრულდება
# print(50 > 11) # True - ნამდვილად მეტია 50 11-ზე და True პირობა კმაყოფილდება რადგან როგორც მათემატიკაში არის მეტი ისე არის Python-შიც Python თავად კალკულატორია

print(True and True) # True - ამის შედეგი, იმიტომ არის True რომ ორივე ჭეშმარიტი ლოგიკური ოპერაცია დარდება ხოლო and ის შემთხვევაში თუ ერთ ერთი მაინც არის and პასუხი ყოველთვის იქნება ჭეშმარიტი, პასუხი მაგრამ თუ False-ით იწყება არ შესრულდება ლოგიკური ოპერაცია, (True)
print(False and True) # როდესაც კოდის ლოგიკა, და სტრუქტურა იწყება False-ით ჩვენ ვიცით რომ შედეგი იქნება ყოველთვის False

print(not True) # არაა ჭეშმარიტება, True, ხოლო რაც True-ს საპირისპიროა ის შესრულდება რადგან True არ არის კოდში True, არ შესრულდება არაა True და არის False (True-ს საპირისპირო)

print(True and False or True and False) # and-ის შემთხვევაში კოდი, შეარჩევს სიცრუის გამოხატულებას, (False-ს) მხოლოდ იმის გამო რომ ბოლოში არის and

print(False or True) # True

# Boolean - ლოგიკა

# True - მართალი / ჭეშმარიტი / სწორი / უტყუარი / სინამდვილე

# False - ცრუ / არასწორი / არაჭეშმარიტი / მცდარი / ყალბი / ტყუილი
# and - და
# or - ან
# not - არა
# print - ბეჭდვა

print(not False) # True - იმიტომ რომ როდესაც ვეუბნებით რომ არ იყოს მცდარი, მაშინ მოდის მისი საპირისპირო ჭეშმარიტი პასუხი (True)

print(not True and False == False) # False
print(True == True)  # True - რადგან ორი ჭეშმარიტი (True) პასუხი დარდება ერთმანეთთან
print(False == False)# True - ორი სიცრუე (False) დარდება ერთმანეთთან პასუხი იქნება True რადგან მართლაც ამ ორ მნიშვნელობას ვადარებთ
print(False == True) # False - ერთი სიცრუე დარდება ერთ ჭეშმარიტთან ეს გამოიწვევს False-ს
print(True == False) # False - შედეგი იქნება False

print(not False == False) # False - რადგან ვეუბნებით, კომპიუტერს რომ სიცრუე არ შეადაროს False-თან და რომ არ შედარდება ორი მნიშვნელობა იქნება False


print(10 > 2) # True